// <auto-generated />
using System;
using CattleBreedsApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CattleBreedsApi.Data.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20250701181136_AddWeightToPrediction")]
    partial class AddWeightToPrediction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("CattleBreedsApi.Models.CattlePrediction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Confidence")
                        .HasColumnType("REAL");

                    b.Property<Guid>("UploadFileId")
                        .HasColumnType("TEXT");

                    b.Property<float>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("CattlePredictions");
                });

            modelBuilder.Entity("CattleBreedsApi.Models.CattlePredictionJob", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BestResultImageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Breed")
                        .HasColumnType("TEXT");

                    b.Property<float>("Confidence")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Processed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ProcessedAt")
                        .HasColumnType("TEXT");

                    b.Property<float>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("BestResultImageId");

                    b.ToTable("CattlePredictionJobs");
                });

            modelBuilder.Entity("CattleBreedsApi.Models.UploadFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CattlePredictionJobId")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CattlePredictionJobId");

                    b.ToTable("UploadFiles");
                });

            modelBuilder.Entity("CattleBreedsApi.Models.CattlePredictionJob", b =>
                {
                    b.HasOne("CattleBreedsApi.Models.UploadFile", "BestResultImage")
                        .WithMany()
                        .HasForeignKey("BestResultImageId");

                    b.Navigation("BestResultImage");
                });

            modelBuilder.Entity("CattleBreedsApi.Models.UploadFile", b =>
                {
                    b.HasOne("CattleBreedsApi.Models.CattlePredictionJob", null)
                        .WithMany("UploadFiles")
                        .HasForeignKey("CattlePredictionJobId");
                });

            modelBuilder.Entity("CattleBreedsApi.Models.CattlePredictionJob", b =>
                {
                    b.Navigation("UploadFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
